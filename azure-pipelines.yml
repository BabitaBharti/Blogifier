# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'

stages:

- stage: Initial_Job
  displayName: 'Code Pull'
  jobs:
  - job: 'Initial_Job'
    steps:
    - checkout: none
    
######################################################################

- stage: Install_Packages
  displayName: 'Install Packages'
  jobs:
    - job:
      steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          useGlobalJson: true
 
      - task: NuGetToolInstaller@1
        inputs:
          versionSpec: '5.x.x'
          checkLatest: true

####################################################################

- stage: Application_Build
  displayName: 'Application Build'
  jobs:
    - job: 
      steps:  
      - task: NuGetCommand@2
        inputs:
          command: 'restore'
          restoreSolution: '$(solution)'
          feedsToUse: 'select'
          noCache: true
    
      - script: dotnet build --configuration $(buildConfiguration)
        displayName: 'dotnet build $(buildConfiguration)'

#######################################################################

- stage: Publish_the_Build
  displayName: 'Publish the Build'
  jobs:
    - job: 
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'dotnet publish $(buildConfiguration)'
        inputs:
          command: publish
          publishWebProjects: False
          projects: 'src/Blogifier/Blogifier.csproj'
          arguments: '--self-contained --runtime win-x86 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True
          
########################################################################

- stage: Run_Unit_Test
  displayName: 'Run Unit Testing'
  jobs:
    - job: 
      steps:      
      - task: DotNetCoreCLI@2
        displayName: 'Run Unit Test'
        inputs:
          command: 'test'
          projects: '**/*.Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration)'

#########################################################################

- stage: Publish_Artifact
  displayName: 'Publish Artifact'
  jobs:
    - job: 
      steps:
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
          artifactName: 'Drop'
